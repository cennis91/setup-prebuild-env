name: Setup Dev Container Prebuild Environment
description: Simplify prebuilding devcontainer images (composite action)
author: CEnnis91
branding:
  color: red
  icon: box

inputs:
  # common inputs
  cache:
    description: Cache downloaded dependencies to cache backend
    required: false
    default: 'true'
  password:
    description: Password or token for authenticating to the container registry
    required: false
  platforms:
    description: Comma-separated list of platforms to build for
    required: false
  registry:
    description: Server address of the container registry
    required: false
    default: ghcr.io
  username:
    description: Username for authenticating to the container registry
    required: false

  # setup control flags
  setup-buildx:
    description: Setup Docker using docker/setup-buildx-action
    required: false
    default: 'true'
  setup-login:
    description: Setup login to container registry using docker/login-action
    required: false
    default: 'true'
  setup-node:
    description: Setup Node.js via actions/setup-node
    required: false
    default: 'true'
  setup-qemu:
    description: Setup QEMU via docker/setup-qemu-action for cross-platform builds
    required: false
    default: 'true'
  setup-skopeo:
    description: Setup Skopeo by installing the Skopeo package
    required: false
    default: 'true'

  # skopeo installation config
  skopeo-minimum:
    description: Minimum version of Skopeo needed
    required: false
    default: '1.9.0'  # 1.4.1 if single-arch builds are needed
  skopeo-url:
    description: Repository URL of the Skopeo package to install
    required: false
    default: ''

  # node installation config and actions/setup-node
  node-minimum:
    description: Minimum version of Node.js needed to run devcontainer/cli
    required: false
    default: '18.0.0' # from devcontainers/cli package.json
  node-version:
    description: Version of Node.js to install via actions/setup-node
    required: false
    default: 'lts'

  # docker/setup-qemu-action
  qemu-image:
    description: QEMU static binaries Docker image
    required: false

  # docker/setup-buildx-action
  buildx-version:
    description: Version of Buildx to install
    required: false

outputs:
  needs-cross:
    description: Boolean value to indicate cross-platform builds are needed
    value: ${{ steps.validate.outputs.needs-cross }}
  platforms:
    description: Comma-separated list of all OCI platform specifiers to build
    value: ${{ steps.validate.outputs.platforms-all }}
  platforms-cross:
    description: Comma-separated list of non-native OCI platform specifiers to build
    value: ${{ steps.validate.outputs.platforms-cross }}
  platforms-native:
    description: Comma-separated list of native OCI platform specifiers to build
    value: ${{ steps.validate.outputs.platforms-native }}

  # docker/setup-buildx-action
  buildx-driver:
    description: Docker Buildx builder driver
    value: ${{ steps.buildx.outputs.driver || '' }}
  buildx-name:
    description: Docker Buildx builder name
    value: ${{ steps.buildx.outputs.name || '' }}
  buildx-nodes:
    description: Docker Buildx builder nodes metadata
    value: ${{ steps.buildx.outputs.nodes || '' }}
  buildx-platforms:
    description: Docker Buildx builder node platforms (preferred and/or available)
    value: ${{ steps.buildx.outputs.platforms || '' }}

  # actions/setup-node
  node-version:
    description: Installed Node.js version
    value: ${{ steps.node.outputs.node-version || '' }}

  # docker/setup-qemu-action
  qemu-platforms:
    description: QEMU available platforms (comma separated)
    value: ${{ steps.qemu.outputs.platforms || '' }}

  # awalsh128/cache-apt-pkgs-action
  skopeo-cache-hit:
    description: Boolean value to indicate a cache was found for Skopeo packages
    value: ${{ steps.skopeo-cache.outputs.cache-hit || false }}
  skopeo-package-version:
    description: The Skopeo package name and version that was installed
    value: ${{ steps.skopeo-cache.outputs.package-version-list || steps.skopeo.outputs.skopeo-version || '' }}

runs:
  using: composite
  steps:
    - name: Validate system and OCI platform inputs
      id: validate
      shell: bash
      working-directory: ${{ github.action_path }}/src
      env:
        INPUT_NODE_MIN: ${{ inputs.node-minimum }}
        INPUT_PLATFORMS: ${{ inputs.platforms }}
        INPUT_SKOPEO_MIN: ${{ inputs.skopeo-minimum }}
      run: |
        echo "::group::Validate system and OCI platform inputs"
        ./action.sh dependencies | tee -a "$GITHUB_OUTPUT"
        ./action.sh platforms | tee -a "$GITHUB_OUTPUT"
        echo "::endgroup::"

    # https://github.com/docker/login-action
    # use 'setup-login: false' if more configuration is desired
    - name: Login to container registry
      if: inputs.setup-login == 'true'
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username || github.actor }}
        password: ${{ inputs.password }}

    # https://github.com/devcontainers/ci/issues/191#issuecomment-1532014769
    # use 'setup-skopeo: false' if more configuration is desired
    - name: Setup Skopeo
      if: inputs.setup-skopeo == 'true' && steps.validate.outputs.skopeo-updated == 'false'
      id: skopeo
      shell: bash
      working-directory: ${{ github.action_path }}/src
      env:
        # https://github.com/devcontainers/ci/issues/191#issuecomment-1532014769
        ENV_GOOD_REPO_URL: 'https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_22.04'
        INPUT_CACHE: ${{ inputs.cache }}
        INPUT_SKOPEO_URL: ${{ inputs.skopeo-url }}
      run: |
        echo "::group::Setup Skopeo"
        ./action.sh skopeo
        ./action.sh version "skopeo" | tee -a "$GITHUB_OUTPUT"
        echo "::endgroup::"

    # https://github.com/awalsh128/cache-apt-pkgs-action
    # cache the skopeo package even if it is not managed
    - name: Cache Skopeo packages
      if: inputs.cache == 'true' && steps.validate.outputs.skopeo-updated == 'false'
      id: skopeo-cache
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: skopeo
        version: 1.0

    # https://github.com/actions/setup-node
    # use 'setup-node: false' if more configuration is desired
    - name: Setup Node.js
      if: inputs.setup-node == 'true' && steps.validate.outputs.node-updated == 'false'
      id: node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    # https://github.com/docker/setup-qemu-action
    # use 'setup-qemu: false' if more configuration is desired
    - name: Setup QEMU for cross-platform building
      if: inputs.setup-qemu == 'true' && steps.validate.outputs.needs-cross == 'true'
      id: qemu
      uses: docker/setup-qemu-action@v3
      with:
        image: ${{ inputs.qemu-image }}
        cache-image: ${{ inputs.cache }}
        platforms: ${{ steps.validate.outputs.platforms-cross }}

    # https://github.com/docker/setup-buildx-action
    # use 'setup-buildx: false' if more configuration is desired
    - name: Setup Docker Buildx for building
      if: inputs.setup-buildx == 'true'
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: ${{ inputs.buildx-version }}
        platforms: ${{ steps.validate.outputs.platforms-all }}
        cache-binary: ${{ inputs.cache }}
